@using ParaglidingFlightLogWeb.ViewModels
@using ParaglidingFlightLogWeb.Services
@rendermode InteractiveServer
@inject ILogger<EditFlight> Logger

<RadzenFormField Text="Glider" Variant="Variant.Outlined">
            <RadzenDropDown AllowFiltering="true"
                            FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive"
                            Data=@ViewModel.GliderListViewModel
            @bind-Value=@FlightToEdit.Glider Class="w-100" />
        </RadzenFormField>
        <RadzenFormField Text="Site" Variant="Variant.Outlined">
            <RadzenDropDown AllowFiltering="true"
                            FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive"
                            Data=@ViewModel.SiteListViewModel
            @bind-Value=@FlightToEdit.TakeOffSite Class="w-100" />
        </RadzenFormField>


    <RadzenTextArea Placeholder="Comment" @bind-Value=FlightToEdit.Comment Class="w-100" Rows="10" />




@code {
    [Parameter]
    public FlightViewModel FlightToEdit { get; set; } = null!;
    [Parameter]
    public CoreService ViewModel { get; set; } = null!;
    protected override void OnInitialized()
    {
        Logger.LogInformation("Initialized");
    }

}
