@using ParaglidingFlightLogWeb.Services
@using ParaglidingFlightLogWeb.ViewModels
@using ParaglidingFlightLogWeb.Components.Subs
@rendermode InteractiveServer

<div class="container">
    <div class="col-4">
        <MyTextInput Label="Name" @bind-Value=@SiteToEdit.Name />
        <MyTextInput Label="Town" @bind-Value=@SiteToEdit.Town />
        <RadzenFormField Text="Country" Variant="Variant.Outlined">
            <RadzenDropDown AllowFiltering="false" Data=@SiteToEdit.AvailableCountry @bind-Value=@SiteToEdit.Country />
        </RadzenFormField>
            <RadzenFormField Text="Wind From" Variant="Variant.Outlined">
                <RadzenDropDown AllowFiltering="true" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" Data=@SiteToEdit.AvailableWindOrientation @bind-Value=@SiteToEdit.WindOrientationBegin />
            </RadzenFormField>
            <RadzenFormField Text="Wind To" Variant="Variant.Outlined">
                <RadzenDropDown AllowFiltering="true" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" Data=@SiteToEdit.AvailableWindOrientation @bind-Value=@SiteToEdit.WindOrientationEnd />
            </RadzenFormField>

    </div>
    <div class="col-8">
        <div class="row">
            <MyNumericInput Label="Latitude [°]" @bind-Value=@SiteToEdit.Latitude />
            <MyNumericInput Label="Longitude [°]" @bind-Value=@SiteToEdit.Longitude />
            <MyNumericInput Label="Altiude [m]" @bind-Value=@SiteToEdit.Altitude />
        </div>
    </div>
</div>
@code {
    [Parameter]
    public SiteViewModel SiteToEdit { get; set; } = null!;
    [Parameter]
    public CoreService ViewModel { get; set; } = null!;



}
